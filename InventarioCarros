#include <stdio.h>
#include <string.h>

#define MAX_CARROS 100

// Definición de la estructura Carro
struct Carro {
    char color[20];
    char marca[30];
    char placa[15];
    char cedulaDueno[20];
    char nombreDueno[50];
};

// Declaración del arreglo de carros y variable para contar la cantidad de carros en el inventario
struct Carro inventario[MAX_CARROS];
int numCarros = 0;

// Función para agregar un nuevo carro al inventario
void agregarCarro() {
    // Verificar si el inventario está lleno
    if (numCarros >= MAX_CARROS) {
        printf("El inventario está lleno. No se puede agregar más carros.\n");
        return;
    }

    // Crear una nueva estructura Carro para almacenar los datos del nuevo carro
    struct Carro nuevoCarro;

    // Solicitar al usuario los datos del nuevo carro y almacenarlos en la estructura
    printf("Ingrese el color del carro: ");
    scanf("%s", nuevoCarro.color);

    printf("Ingrese la marca del carro: ");
    scanf("%s", nuevoCarro.marca);

    printf("Ingrese la placa del carro: ");
    scanf("%s", nuevoCarro.placa);

    printf("Ingrese la cedula del dueño: ");
    scanf("%s", nuevoCarro.cedulaDueno);

    printf("Ingrese el nombre del dueño: ");
    getchar(); // Limpiar el buffer del salto de línea
    fgets(nuevoCarro.nombreDueno, sizeof(nuevoCarro.nombreDueno), stdin);

    // Agregar el nuevo carro al inventario y aumentar la cantidad de carros
    inventario[numCarros] = nuevoCarro;
    numCarros++;

    printf("Carro agregado al inventario con éxito.\n");
}

// Función para buscar un carro por placa en el inventario
void buscarCarroPorPlaca() {
    char placaBuscada[15];
    printf("Ingrese la placa del carro a buscar: ");
    scanf("%s", placaBuscada);

    // Bandera para indicar si se encontró el carro con la placa buscada
    int encontrado = 0;
    for (int i = 0; i < numCarros; i++) {
        if (strcmp(inventario[i].placa, placaBuscada) == 0) {
            // Mostrar los datos del carro encontrado
            printf("Carro encontrado:\n");
            printf("Color: %s\n", inventario[i].color);
            printf("Marca: %s\n", inventario[i].marca);
            printf("Placa: %s\n", inventario[i].placa);
            printf("Cedula del dueño: %s\n", inventario[i].cedulaDueno);
            printf("Nombre del dueño: %s\n", inventario[i].nombreDueno);
            encontrado = 1; // Cambiar la bandera a 1 para indicar que se encontró el carro
            break;
        }
    }

    if (!encontrado) {
        printf("Carro con placa %s no encontrado en el inventario.\n", placaBuscada);
    }
}

// Función para buscar un carro por cédula del dueño en el inventario
void buscarCarroPorCedula() {
    char cedulaBuscada[20];
    printf("Ingrese la cédula del dueño del carro a buscar: ");
    scanf("%s", cedulaBuscada);

    // Bandera para indicar si se encontró el carro con la cédula buscada
    int encontrado = 0;
    for (int i = 0; i < numCarros; i++) {
        if (strcmp(inventario[i].cedulaDueno, cedulaBuscada) == 0) {
            // Mostrar los datos del carro encontrado
            printf("Carro encontrado:\n");
            printf("Color: %s\n", inventario[i].color);
            printf("Marca: %s\n", inventario[i].marca);
            printf("Placa: %s\n", inventario[i].placa);
            printf("Cédula del dueño: %s\n", inventario[i].cedulaDueno);
            printf("Nombre del dueño: %s\n", inventario[i].nombreDueno);
            encontrado = 1; // Cambiar la bandera a 1 para indicar que se encontró el carro
            break;
        }
    }

    if (!encontrado) {
        printf("Carro con cédula %s no encontrado en el inventario.\n", cedulaBuscada);
    }
}

// Función para modificar un carro en el inventario
void modificarCarro() {
    char placaModificar[15];
    printf("Ingrese la placa del carro a modificar: ");
    scanf("%s", placaModificar);

    // Bandera para indicar si se encontró el carro a modificar
    int encontrado = 0;
    for (int i = 0; i < numCarros; i++) {
        if (strcmp(inventario[i].placa, placaModificar) == 0) {
            printf("Ingrese los nuevos datos del carro:\n");
            // Solicitar al usuario los nuevos datos del carro y actualizarlos en la estructura
            printf("Color: ");
            scanf("%s", inventario[i].color);

            printf("Marca: ");
            scanf("%s", inventario[i].marca);

            printf("Placa: ");
            scanf("%s", inventario[i].placa);

            printf("Cédula del dueño: ");
            scanf("%s", inventario[i].cedulaDueno);

            printf("Nombre del dueño: ");
            getchar(); // Limpiar el buffer del salto de línea
            fgets(inventario[i].nombreDueno, sizeof(inventario[i].nombreDueno), stdin);

            printf("Carro modificado con éxito.\n");
            encontrado = 1; // Cambiar la bandera a 1 para indicar que se encontró el carro
            break;
        }
    }

    if (!encontrado) {
        printf("Carro con placa %s no encontrado en el inventario.\n", placaModificar);
    }
}

// Función para borrar un carro del inventario
void borrarCarro() {
    char placaBorrar[15];
    printf("Ingrese la placa del carro a borrar: ");
    scanf("%s", placaBorrar);

    // Bandera para indicar si se encontró el carro a borrar
    int encontrado = 0;
    for (int i = 0; i < numCarros; i++) {
        if (strcmp(inventario[i].placa, placaBorrar) == 0) {
            // Mover el último carro del inventario a la posición del carro a borrar
            inventario[i] = inventario[numCarros - 1];
            numCarros--; // Decrementar la cantidad de carros en el inventario
            printf("Carro borrado del inventario con éxito.\n");
            encontrado = 1; // Cambiar la bandera a 1 para indicar que se encontró el carro
            break;
        }
    }

    if (!encontrado) {
        printf("Carro con placa %s no encontrado en el inventario.\n", placaBorrar);
    }
}

// Función para guardar los datos del inventario en un archivo
void guardarEnArchivo() {
    FILE *archivo = fopen("inventario.txt", "w");
    if (archivo == NULL) {
        printf("Error al abrir el archivo.\n");
        return;
    }

    // Escribir los datos del inventario en el archivo
    fprintf(archivo, "--- Inventario de Carros ---\n");
    for (int i = 0; i < numCarros; i++) {
        fprintf(archivo, "Carro %d:\n", i + 1);
        fprintf(archivo, "Color: %s\n", inventario[i].color);
        fprintf(archivo, "Marca: %s\n", inventario[i].marca);
        fprintf(archivo, "Placa: %s\n", inventario[i].placa);
        fprintf(archivo, "Cédula del dueño: %s\n", inventario[i].cedulaDueno);
        fprintf(archivo, "Nombre del dueño: %s\n", inventario[i].nombreDueno);
        fprintf(archivo, "\n");
    }

    fclose(archivo);
    printf("Datos guardados en el archivo 'inventario.txt' con éxito.\n");
}

int main() {
    int opcion;

    do {
        printf("\n--- Inventario de Carros ---\n");
        printf("1. Agregar carro\n");
        printf("2. Buscar carro por placa\n");
        printf("3. Buscar carro por cedula del dueño\n");
        printf("4. Modificar carro\n");
        printf("5. Borrar carro\n");
        printf("6. Guardar en archivo\n");
        printf("7. Salir\n");
        printf("Ingrese una opcion: ");
        scanf("%d", &opcion);

        switch (opcion) {
            case 1:
                agregarCarro();
                break;
            case 2:
                buscarCarroPorPlaca();
                break;
            case 3:
                buscarCarroPorCedula();
                break;
            case 4:
                modificarCarro();
                break;
            case 5:
                borrarCarro();
                break;
            case 6:
                guardarEnArchivo();
                break;
            case 7:
                printf("Saliendo del programa.\n");
                break;
            default:
                printf("Opcion invalida. Intente nuevamente.\n");
                break;
        }
    } while (opcion != 7);

    return 0;
}
